(self.webpackChunkdoc_ops=self.webpackChunkdoc_ops||[]).push([[290],{7166:function(t,e,a){"use strict";a.r(e),a.d(e,{frontMatter:function(){return d},contentTitle:function(){return p},metadata:function(){return o},toc:function(){return s},default:function(){return k}});var n=a(2122),l=a(9756),r=(a(7294),a(3905)),i=["components"],d={},p="API Reference - IOTA Client Library - Java binding",o={unversionedId:"libraries/java/api_reference",id:"libraries/java/api_reference",isDocsHomePage:!1,title:"API Reference - IOTA Client Library - Java binding",description:"Api",source:"@site/docs/libraries/java/api_reference.md",sourceDirName:"libraries/java",slug:"/libraries/java/api_reference",permalink:"/docs/libraries/java/api_reference",editUrl:"https://github.com/iotaledger/iota.rs/tree/dev/documentation/docs/libraries/java/api_reference.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Examples",permalink:"/docs/libraries/java/examples"},next:{title:"High Level API Specification",permalink:"/docs/specs"}},s=[{value:"Api",id:"api",children:[]},{value:"ClientBuilder",id:"clientbuilder",children:[]},{value:"Client",id:"client",children:[]},{value:"ClientMessageBuilder",id:"clientmessagebuilder",children:[]},{value:"GetMessageBuilder",id:"getmessagebuilder",children:[]},{value:"GetAddressesBuilder",id:"getaddressesbuilder",children:[]},{value:"OutputsOptions",id:"outputsoptions",children:[]},{value:"Message",id:"message",children:[]},{value:"MessageBuilder",id:"messagebuilder",children:[]},{value:"MessagePayload",id:"messagepayload",children:[]},{value:"IndexationPayload",id:"indexationpayload",children:[]},{value:"TransactionPayload",id:"transactionpayload",children:[]},{value:"TransactionPayloadBuilder",id:"transactionpayloadbuilder",children:[]},{value:"TreasuryPayload",id:"treasurypayload",children:[]},{value:"MilestonePayload",id:"milestonepayload",children:[]},{value:"ReceiptPayload",id:"receiptpayload",children:[]},{value:"Essence",id:"essence",children:[]},{value:"RegularEssence",id:"regularessence",children:[]},{value:"MilestonePayloadEssence",id:"milestonepayloadessence",children:[]},{value:"UnlockBocks",id:"unlockbocks",children:[]},{value:"UnockBock",id:"unockbock",children:[]},{value:"ReferenceUnlock",id:"referenceunlock",children:[]},{value:"SignatureUnlock",id:"signatureunlock",children:[]},{value:"MigratedFundsEntry",id:"migratedfundsentry",children:[]},{value:"SignatureLockedSingleOutput",id:"signaturelockedsingleoutput",children:[]}],u={toc:s};function k(t){var e=t.components,a=(0,l.Z)(t,i);return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-reference---iota-client-library---java-binding"},"API Reference - IOTA Client Library - Java binding"),(0,r.kt)("h3",{id:"api"},"Api"),(0,r.kt)("p",null,"The Api enum contains a list of node endpoints we can call.\nIt is used in setting a timeout for a specific api call during the buiding of a client using ",(0,r.kt)("inlineCode",{parentName:"p"},"withApiTimeout(api, timeout)")," .  "),(0,r.kt)("p",null,"GET_HEALTH\nGET_INFO\nGET_PEERS\nGET_TIPS\nPOST_MESSAGE\nPOST_MESSAGE_WITH_REMOTE_POW\nGET_OUTPUT\nGET_MILESTONE\nGET_MESSAGE\nGET_BALANCE"),(0,r.kt)("h3",{id:"clientbuilder"},"ClientBuilder"),(0,r.kt)("h4",{id:"new-clientbuilder"},"new(): ClientBuilder"),(0,r.kt)("p",null,"Construct the ClientBuilder instance, with which you can create a Client to connect to nodes"),(0,r.kt)("h4",{id:"withnodenode-clientbuilder"},"withNode(node): ClientBuilder"),(0,r.kt)("p",null,"Adds an IOTA node to the client pool."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"node"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A node URL")))),(0,r.kt)("h4",{id:"withnodesnodes-clientbuilder"},"withNodes(nodes): ClientBuilder"),(0,r.kt)("p",null,"Adds an array of IOTA nodes to the client pool."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nodes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[]")),(0,r.kt)("td",{parentName:"tr",align:null},"A node URL")))),(0,r.kt)("h4",{id:"withnodeauthnode-jwt-username-password-clientbuilder"},"withNodeAuth(node, jwt, username, password): ClientBuilder"),(0,r.kt)("p",null,"Adds an IOTA node by its URL with optional jwt and or basic authentication"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nodes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A node URL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"jwt"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"jwt or null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"username"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"username or null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"password"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"password or null")))),(0,r.kt)("h4",{id:"withprimarynodenode-jwt-username-password-clientbuilder"},"withPrimaryNode(node, jwt, username, password): ClientBuilder"),(0,r.kt)("p",null,"Adds an IOTA node by its URL to be used as primary node, with optional jwt and or basic authentication"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"node"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A node URL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"jwt"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"jwt or null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"username"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"username or null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"password"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"password or null")))),(0,r.kt)("h4",{id:"withprimarypownodenode-jwt-username-password-clientbuilder"},"withPrimaryPowNode(node, jwt, username, password): ClientBuilder"),(0,r.kt)("p",null,"Adds an IOTA node by its URL to be used as primary PoW node (for remote PoW), with optional jwt and or basic authentication"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"node"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A node URL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"jwt"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"jwt or null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"username"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"username or null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"password"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"password or null")))),(0,r.kt)("h4",{id:"withpermanodenode-jwt-username-password-clientbuilder"},"withPermanode(node, jwt, username, password): ClientBuilder"),(0,r.kt)("p",null,"Adds an IOTA permanode by its URL, with optional jwt and or basic authentication"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"node"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A node URL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"jwt"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"jwt or null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"username"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"username or null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"password"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"password or null")))),(0,r.kt)("h4",{id:"withnodepoolurlsnodes-clientbuilder"},"withNodePoolUrls(nodes): ClientBuilder"),(0,r.kt)("p",null,"Add a list of nodes to use in a node pool"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nodes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[]")),(0,r.kt)("td",{parentName:"tr",align:null},"urls for the node pool")))),(0,r.kt)("h4",{id:"withofflinemode-clientbuilder"},"withOfflineMode(): ClientBuilder"),(0,r.kt)("p",null,'Selects the type of network to get default nodes for it, only "testnet" is supported at the moment.\nNodes that don\'t belong to this network are ignored. Default nodes are only used when no other nodes are provided.'),(0,r.kt)("h4",{id:"withnetworknetwork-clientbuilder"},"withNetwork(network): ClientBuilder"),(0,r.kt)("p",null,"Add a list of nodes to use in a node pool"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"network"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"name of the network")))),(0,r.kt)("h4",{id:"withnodesyncintervalnode_sync_interval-clientbuilder"},"withNodeSyncInterval(node_sync_interval): ClientBuilder"),(0,r.kt)("p",null,"Set the node sync interval"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"node_sync_interval"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"float")),(0,r.kt)("td",{parentName:"tr",align:null},"the interval in seconds")))),(0,r.kt)("h4",{id:"withnodesyncdisabled-clientbuilder"},"withNodeSyncDisabled(): ClientBuilder"),(0,r.kt)("p",null,"Disables the node syncing process.\nEvery node will be considered healthy and ready to use."),(0,r.kt)("h4",{id:"withquorumquorum-clientbuilder"},"withQuorum(quorum): ClientBuilder"),(0,r.kt)("p",null,"Set if quroum should be used or not"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"quorum"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"true for quorum on, false for off")))),(0,r.kt)("h4",{id:"withquorumsizequorum_size-clientbuilder"},"withQuorumSize(quorum_size): ClientBuilder"),(0,r.kt)("p",null,"Set amount of nodes which should be used for quorum"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"quorum_size"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"size of the quorum")))),(0,r.kt)("h4",{id:"withquorumthresholdthreshold-clientbuilder"},"withQuorumThreshold(threshold): ClientBuilder"),(0,r.kt)("p",null,"Set quorum threshold percentage (0-100)"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"threshold"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"threshold for reaching a quorum decision")))),(0,r.kt)("h4",{id:"withmqttbrokeroptionsoptions-clientbuilder"},"withMqttBrokerOptions(options): ClientBuilder"),(0,r.kt)("p",null,"Sets the MQTT broker options."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BrokerOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"the options to use in MQTT")))),(0,r.kt)("h4",{id:"withlocalpowlocal-clientbuilder"},"withLocalPow(local): ClientBuilder"),(0,r.kt)("p",null,"Sets whether the PoW should be done locally or remotely."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"local"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"true for local PoW, false for remote")))),(0,r.kt)("h4",{id:"withtipsintervaltips-clientbuilder"},"withTipsInterval(tips): ClientBuilder"),(0,r.kt)("p",null,"Sets after how many seconds new tips will be requested during PoW"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tips"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"interval in seconds")))),(0,r.kt)("h4",{id:"withrequesttimeouttimeout-clientbuilder"},"withRequestTimeout(timeout): ClientBuilder"),(0,r.kt)("p",null,"Sets the default request timeout in seconds."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timeout"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"float")),(0,r.kt)("td",{parentName:"tr",align:null},"the timeout in seconds")))),(0,r.kt)("h4",{id:"withapitimeoutapi-timeout-clientbuilder"},"withApiTimeout(api, timeout): ClientBuilder"),(0,r.kt)("p",null,"Sets the request timeout in seconds for a specific API usage."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"api"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Api")),(0,r.kt)("td",{parentName:"tr",align:null},"The api call to set the timeout for")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timeout"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"float")),(0,r.kt)("td",{parentName:"tr",align:null},"the timeout in seconds")))),(0,r.kt)("h4",{id:"withrequesttimeouttimeout-clientbuilder-1"},"withRequestTimeout(timeout): ClientBuilder"),(0,r.kt)("p",null,"Sets the default request timeout in seconds."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timeout"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"float")),(0,r.kt)("td",{parentName:"tr",align:null},"the timeout in seconds")))),(0,r.kt)("h4",{id:"finish-client"},"finish(): Client"),(0,r.kt)("p",null,"Build the Client instance."),(0,r.kt)("h3",{id:"client"},"Client"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Static methods")),(0,r.kt)("h4",{id:"builder-clientbuilder"},"Builder(): ClientBuilder"),(0,r.kt)("p",null,"Static method to create a ClientBuilder"),(0,r.kt)("h4",{id:"generatemnemonic-string"},"generateMnemonic(): String"),(0,r.kt)("p",null,"Generates a new mnemonic."),(0,r.kt)("h4",{id:"mnemonictohexseed-string"},"mnemonicToHexSeed(): String"),(0,r.kt)("p",null,"Returns a hex encoded seed for a mnemonic."),(0,r.kt)("h4",{id:"bech32tohexbech32-string"},"bech32ToHex(bech32): String"),(0,r.kt)("p",null,"Transforms bech32 to hex"),(0,r.kt)("h4",{id:"isaddressvalidaddress-boolean"},"isAddressValid(address): boolean"),(0,r.kt)("p",null,"Checks if a String address is valid."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The address to check validity for")))),(0,r.kt)("h4",{id:"parsebech32addressaddress-address"},"parseBech32Address(address): Address"),(0,r.kt)("p",null,"Returns a valid Address parsed from a String."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The address to parse")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"instance methods")),(0,r.kt)("h4",{id:"gethealth-boolean"},"getHealth(): boolean"),(0,r.kt)("p",null,"GET /health endpoint"),(0,r.kt)("h4",{id:"getnodehealthnode-boolean"},"getNodeHealth(node): boolean"),(0,r.kt)("p",null,"GET /health endpoint for a specific node"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"node"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"node to call get health on")))),(0,r.kt)("h4",{id:"getinfo-nodeinfowrapper"},"getInfo(): NodeInfoWrapper"),(0,r.kt)("p",null,"GET /api/v1/info endpoint"),(0,r.kt)("h4",{id:"getpeers-peerdto"},"getPeers(): PeerDto[]"),(0,r.kt)("p",null,"GET /api/v1/peers endpoint"),(0,r.kt)("h4",{id:"gettips-clientbuilder"},"getTips(): ClientBuilder"),(0,r.kt)("p",null,"GET /api/v1/tips endpoint"),(0,r.kt)("h4",{id:"getoutputoutput_id-outputresponse"},"getOutput(output_id): OutputResponse"),(0,r.kt)("p",null,"GET /api/v1/outputs/{outputId} endpoint\nFind an output by its transaction_id and corresponding output_index."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"the id of the output")))),(0,r.kt)("h4",{id:"getaddress-getaddressbuilder"},"getAddress(): GetAddressBuilder"),(0,r.kt)("p",null,"GET /api/v1/addresses/{address} endpoint\nReturns a builder ith which to construct the exact needs."),(0,r.kt)("h4",{id:"getaddressbalanceaddress-balanceaddressresponse"},"getAddressBalance(address): BalanceAddressResponse"),(0,r.kt)("p",null,"Return the balance in iota for the given address; No seed or security level needed to do this\nsince we are only checking and already know the address."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"the address to look up")))),(0,r.kt)("h4",{id:"getaddressesbalancesaddresses-balanceaddressresponse"},"getAddressesBalances(addresses): BalanceAddressResponse[]"),(0,r.kt)("p",null,"Return the balance in iota for the given addresses; No seed or security level needed to do this\nsince we are only checking and already know the addresses."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"addresses"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[]")),(0,r.kt)("td",{parentName:"tr",align:null},"the addresses to look up")))),(0,r.kt)("h4",{id:"findoutputsoutput_ids-addresses-outputresponse"},"findOutputs(output_ids, addresses): OutputResponse[]"),(0,r.kt)("p",null,"Find all outputs based on the requests criteria. This method will try to query multiple nodes if\nthe request amount exceeds individual node limit."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output_ids"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[]")),(0,r.kt)("td",{parentName:"tr",align:null},"the output ids to look up")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"addresses"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[]")),(0,r.kt)("td",{parentName:"tr",align:null},"the addresses to look up")))),(0,r.kt)("h4",{id:"getmilestoneindex-milestoneresponse"},"getMilestone(index): MilestoneResponse"),(0,r.kt)("p",null,"GET /api/v1/milestones/{index} endpoint\nGet the milestone by the given index."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"the milestone index")))),(0,r.kt)("h4",{id:"getmilestoneutxochangesindex-milestoneutxochangesresponse"},"getMilestoneUtxoChanges(index): MilestoneUtxoChangesResponse"),(0,r.kt)("p",null,"GET /api/v1/milestones/{index}/utxo-changes endpoint\nGets the utxo changes by the given milestone index."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"the milestone index")))),(0,r.kt)("h4",{id:"getreceipts-receiptdto"},"getReceipts(): ReceiptDto[]"),(0,r.kt)("p",null,"GET /api/v1/receipts/{migratedAt} endpoint\nGet the receipts by the given milestone index."),(0,r.kt)("h4",{id:"getreceiptsmigratedatindex-milestoneutxochangesresponse"},"getReceiptsMigratedAt(index): MilestoneUtxoChangesResponse"),(0,r.kt)("p",null,"GET /api/v1/receipts/{migratedAt} endpoint\nGet the receipts by the given milestone index."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"the milestone index")))),(0,r.kt)("h4",{id:"gettreasury-treasuryresponse"},"getTreasury(): TreasuryResponse[]"),(0,r.kt)("p",null,"GET /api/v1/treasury endpoint\nGet the treasury output."),(0,r.kt)("h4",{id:"getincludedmessagetransaction_id-message"},"getIncludedMessage(transaction_id): Message"),(0,r.kt)("p",null,"GET /api/v1/transactions/{transactionId}/included-message\nReturns the included message of the transaction."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"transaction_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TransactionId")),(0,r.kt)("td",{parentName:"tr",align:null},"the transaction id (has a ",(0,r.kt)("inlineCode",{parentName:"td"},"fromString")," constructor)")))),(0,r.kt)("h4",{id:"postmessagemsg-messageid"},"postMessage(msg): MessageId"),(0,r.kt)("p",null,"POST /api/v1/messages endpoint"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"msg"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"The message to post to the node")))),(0,r.kt)("h4",{id:"reattachmessage_id-messagewrap"},"reattach(message_id): MessageWrap"),(0,r.kt)("p",null,"Reattaches messages for provided message id. Messages can be reattached only if they are valid and haven't been\nconfirmed for a while."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessageId")),(0,r.kt)("td",{parentName:"tr",align:null},"The message to re-post to the node")))),(0,r.kt)("h4",{id:"reattachuncheckedmessage_id-messagewrap"},"reattachUnchecked(message_id): MessageWrap"),(0,r.kt)("p",null,"Reattach a message without checking if it should be reattached"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessageId")),(0,r.kt)("td",{parentName:"tr",align:null},"The message to re-post to the node")))),(0,r.kt)("h4",{id:"promotemessage_id-messagewrap"},"promote(message_id): MessageWrap"),(0,r.kt)("p",null,"Promotes a message. The method should validate if a promotion is necessary through get_message. If not, the\nmethod should error out and should not allow unnecessary promotions."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessageId")),(0,r.kt)("td",{parentName:"tr",align:null},"The message to promote to the node")))),(0,r.kt)("h4",{id:"promoteuncheckedmessage_id-messagewrap"},"promoteUnchecked(message_id): MessageWrap"),(0,r.kt)("p",null,"Promote a message without checking if it should be promoted"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessageId")),(0,r.kt)("td",{parentName:"tr",align:null},"The message to promote to the node")))),(0,r.kt)("h4",{id:"getbalanceseed-getbalancebuilderapi"},"getBalance(seed): GetBalanceBuilderApi"),(0,r.kt)("p",null,"Return the balance for a provided seed and its wallet chain account index.\nAddresses with balance must be consecutive, so this method will return once it encounters a zero\nbalance address."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"seed"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"the seed we use to generate addresses")))),(0,r.kt)("h4",{id:"message-clientmessagebuilder"},"message(): ClientMessageBuilder"),(0,r.kt)("p",null,"A generic send function for easily sending transaction or indexation messages."),(0,r.kt)("h4",{id:"getmessage-getmessagebuilder"},"getMessage(): GetMessageBuilder"),(0,r.kt)("p",null,"GET /api/v1/messages/{messageId} endpoint"),(0,r.kt)("h4",{id:"getaddressesseed-getaddressesbuilder"},"getAddresses(seed): GetAddressesBuilder"),(0,r.kt)("p",null,"Return a list of addresses from the seed regardless of their validity."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"seed"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"the seed we use to generate addresses")))),(0,r.kt)("h4",{id:"retryuntilincludedmessage_id-interval-max_attempts-messagewrap"},"retryUntilIncluded(message_id, interval, max_attempts): MessageWrap[]"),(0,r.kt)("p",null,"Retries (promotes or reattaches) a message for provided message id until it's included (referenced by a\nmilestone). Default interval is 5 seconds and max attempts is 10. Returns reattached messages. Set to -1 for defaults."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessageId")),(0,r.kt)("td",{parentName:"tr",align:null},"the id of the message we wish to have included")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"interval"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"delay inbetween retries in seconds")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"max_attempts"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"maximum amount of retries before we error out")))),(0,r.kt)("h4",{id:"findinputsaddresses-amount-utxoinput"},"findInputs(addresses, amount): UtxoInput[]"),(0,r.kt)("p",null,"Function to find inputs from addresses for a provided amount (useful for offline signing)"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"addresses"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[]")),(0,r.kt)("td",{parentName:"tr",align:null},"A list of addressesto check for inputs")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"The value we need these inputs to contain in total")))),(0,r.kt)("h3",{id:"clientmessagebuilder"},"ClientMessageBuilder"),(0,r.kt)("h4",{id:"withseedseed-clientmessagebuilder"},"withSeed(seed): ClientMessageBuilder"),(0,r.kt)("p",null,"Sets the seed."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"seed"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"the seed we use to sign messages")))),(0,r.kt)("h4",{id:"withaccountindexaccount_index-clientmessagebuilder"},"withAccountIndex(account_index): ClientMessageBuilder"),(0,r.kt)("p",null,"Sets the account index."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"account_index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"The account index we use")))),(0,r.kt)("h4",{id:"withinitialaddressindexinitial_address_index-clientmessagebuilder"},"withInitialAddressIndex(initial_address_index): ClientMessageBuilder"),(0,r.kt)("p",null,"Sets the index of the address to start looking for balance."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"initial_address_index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"The starting index")))),(0,r.kt)("h4",{id:"withinputinitial_address_index-clientmessagebuilder"},"withInput(initial_address_index): ClientMessageBuilder"),(0,r.kt)("p",null,"Set a custom input(transaction output)"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UtxoInput")),(0,r.kt)("td",{parentName:"tr",align:null},"custom input")))),(0,r.kt)("h4",{id:"withinputrangelow-high-clientmessagebuilder"},"withInputRange(low, high): ClientMessageBuilder"),(0,r.kt)("p",null,"Set a custom range in which to search for addresses for custom inputs. Default: 0..100"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"low"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"lower end of the range (must be 0 or higher)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"high"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"higher end of the range (must be higher than ",(0,r.kt)("inlineCode",{parentName:"td"},"low"),")")))),(0,r.kt)("h4",{id:"withoutputaddress-amount-clientmessagebuilder"},"withOutput(address, amount): ClientMessageBuilder"),(0,r.kt)("p",null,"Set a transfer to the builder, tries to parse address"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The address we transfer the ",(0,r.kt)("inlineCode",{parentName:"td"},"amount")," to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"the amount of iota to send to the ",(0,r.kt)("inlineCode",{parentName:"td"},"address"))))),(0,r.kt)("h4",{id:"withoutputhexaddress-amount-clientmessagebuilder"},"withOutputHex(address, amount): ClientMessageBuilder"),(0,r.kt)("p",null,"Set a transfer to the builder, address needs to be hex encoded"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The address we transfer the ",(0,r.kt)("inlineCode",{parentName:"td"},"amount")," to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"the amount of iota to send to the ",(0,r.kt)("inlineCode",{parentName:"td"},"address"))))),(0,r.kt)("h4",{id:"withdustallowanceoutputaddress-amount-clientmessagebuilder"},"withDustAllowanceOutput(address, amount): ClientMessageBuilder"),(0,r.kt)("p",null,"Set a dust allowance transfer to the builder, address needs to be Bech32 encoded"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The address we transfer the dust ",(0,r.kt)("inlineCode",{parentName:"td"},"amount")," to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"the amount of iota to send to the ",(0,r.kt)("inlineCode",{parentName:"td"},"address"),". Must be more than 1.000.000")))),(0,r.kt)("h4",{id:"withindexvecindex-clientmessagebuilder"},"withIndexVec(index): ClientMessageBuilder"),(0,r.kt)("p",null,"Set indexation to the builder"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"byte[]")),(0,r.kt)("td",{parentName:"tr",align:null},"index in ",(0,r.kt)("inlineCode",{parentName:"td"},"bytes"))))),(0,r.kt)("h4",{id:"withindexstringindex-clientmessagebuilder"},"withIndexString(index): ClientMessageBuilder"),(0,r.kt)("p",null,"Set indexation to the builder"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The index")))),(0,r.kt)("h4",{id:"withdatadata-clientmessagebuilder"},"withData(data): ClientMessageBuilder"),(0,r.kt)("p",null,"Set the data part of a message to the builder"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"byte[]")),(0,r.kt)("td",{parentName:"tr",align:null},"data in ",(0,r.kt)("inlineCode",{parentName:"td"},"bytes"))))),(0,r.kt)("h4",{id:"withdatastringdata-clientmessagebuilder"},"withDataString(data): ClientMessageBuilder"),(0,r.kt)("p",null,"Set the data part of a message to the builder"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The data")))),(0,r.kt)("h4",{id:"preparetransaction-preparedtransactiondata"},"prepareTransaction(): PreparedTransactionData"),(0,r.kt)("p",null,"Prepare a transaction. This consumes the builder."),(0,r.kt)("h4",{id:"signtransactionprepared_transaction_data-seed-inputs_range_low-inputs_range_high-messagepayload"},"signTransaction(prepared_transaction_data, seed, inputs_range_low, inputs_range_high): MessagePayload"),(0,r.kt)("p",null,"Sign the transaction. Set inputsRangeLow and high to 0 for not using an input range. This consumes the builder."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"prepared_transaction_data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PreparedTransactionData")),(0,r.kt)("td",{parentName:"tr",align:null},"The prepared data (from ",(0,r.kt)("inlineCode",{parentName:"td"},"prepareTransaction"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"seed"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The seed we use for address finding and signing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"inputs_range_low"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"The 1 lower range (minimum 0)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"inputs_range_high"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"The the inputs higher range (minimum lower + 1)")))),(0,r.kt)("h4",{id:"finishpayload-message"},"finish(payload): Message"),(0,r.kt)("p",null,"Consume the builder and return the message made with the generic message payload"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessagePayload")),(0,r.kt)("td",{parentName:"tr",align:null},"The data")))),(0,r.kt)("h4",{id:"finishtransactionpayload-message"},"finishTransaction(payload): Message"),(0,r.kt)("p",null,"Consume the builder and return the message made with a TransactionPayload"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TransactionPayload")),(0,r.kt)("td",{parentName:"tr",align:null},"The data")))),(0,r.kt)("h4",{id:"finishmilestonepayload-message"},"finishMilestone(payload): Message"),(0,r.kt)("p",null,"Consume the builder and return the message made with a MilestonePayload"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MilestonePayload")),(0,r.kt)("td",{parentName:"tr",align:null},"The data")))),(0,r.kt)("h4",{id:"finishindexpayload-message"},"finishIndex(payload): Message"),(0,r.kt)("p",null,"Consume the builder and return the message made with an IndexationPayload\n| Param | Type       | Description |\n| ----- | ---------- | ----------- |\n| payload | ",(0,r.kt)("inlineCode",{parentName:"p"},"IndexationPayload")," | The data |"),(0,r.kt)("h4",{id:"finishreceiptpayload-message"},"finishReceipt(payload): Message"),(0,r.kt)("p",null,"Consume the builder and return the message made with a ReceiptPayload"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ReceiptPayload")),(0,r.kt)("td",{parentName:"tr",align:null},"The data")))),(0,r.kt)("h4",{id:"finishtreasurypayload-message"},"finishTreasury(payload): Message"),(0,r.kt)("p",null,"Consume the builder and return the message made with a TreasuryPayload"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TreasuryPayload")),(0,r.kt)("td",{parentName:"tr",align:null},"The data")))),(0,r.kt)("h4",{id:"finish-message"},"finish(): Message"),(0,r.kt)("p",null,"Consume the builder and return the message"),(0,r.kt)("h3",{id:"getmessagebuilder"},"GetMessageBuilder"),(0,r.kt)("h4",{id:"indexstringindex-messageid"},"indexString(index): MessageId[]"),(0,r.kt)("p",null,"GET /api/v1/messages?index={Index} endpoint\nConsume the builder and search for messages matching the index"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"byte[]")),(0,r.kt)("td",{parentName:"tr",align:null},"index in ",(0,r.kt)("inlineCode",{parentName:"td"},"bytes"))))),(0,r.kt)("h4",{id:"indexvecindex-messageid"},"indexVec(index): MessageId[]"),(0,r.kt)("p",null,"GET /api/v1/messages?index={Index} endpoint\nConsume the builder and search for messages matching the index"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The index")))),(0,r.kt)("h4",{id:"datamessage_id-message"},"data(message_id): Message"),(0,r.kt)("p",null,"GET /api/v1/messages/{messageID} endpoint\nConsume the builder and find a message by its identifer. This method returns the given message object if it exists."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessageId")),(0,r.kt)("td",{parentName:"tr",align:null},"The id of the message")))),(0,r.kt)("h4",{id:"metadatamessage_id-messagemetadata"},"metadata(message_id): MessageMetadata"),(0,r.kt)("p",null,"GET /api/v1/messages/{messageID}/metadata endpoint\nConsume the builder and find a message by its identifer. This method returns the given message metadata if it exists."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessageId")),(0,r.kt)("td",{parentName:"tr",align:null},"The id of the message")))),(0,r.kt)("h4",{id:"rawmessage_id-string"},"raw(message_id): String"),(0,r.kt)("p",null,"GET /api/v1/messages/{messageID}/raw endpoint\nConsume the builder and find a message by its identifer. This method returns the given message raw data if it exists."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessageId")),(0,r.kt)("td",{parentName:"tr",align:null},"The id of the message")))),(0,r.kt)("h4",{id:"childrenmessage_id-messageid-"},"children(message_id): MessageId []"),(0,r.kt)("p",null,"GET /api/v1/messages/{messageID}/children endpoint\nConsume the builder and returns the list of message IDs that reference a message by its identifier if it exists."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessageId")),(0,r.kt)("td",{parentName:"tr",align:null},"The id of the message")))),(0,r.kt)("h3",{id:"getaddressesbuilder"},"GetAddressesBuilder"),(0,r.kt)("h4",{id:"balanceaddress-balanceaddressresponse"},"balance(address): BalanceAddressResponse"),(0,r.kt)("p",null,"Consume the builder and get the balance of a given Bech32 encoded address.\nIf count equals maxResults, then there might be more outputs available but those were skipped for performance\nreasons. User should sweep the address to reduce the amount of outputs."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The address were looking up the balance for")))),(0,r.kt)("h4",{id:"outputsaddress-options-balanceaddressresponse"},"outputs(address, options): BalanceAddressResponse"),(0,r.kt)("p",null,"Consume the builder and get all outputs that use a given address.\nIf count equals maxResults, then there might be more outputs available but those were skipped for performance\nreasons. User should sweep the address to reduce the amount of outputs."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The address were looking up the balance for")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OutputsOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"The options for which outputs to show")))),(0,r.kt)("h3",{id:"outputsoptions"},"OutputsOptions"),(0,r.kt)("h4",{id:"includespentinclude_spent-void"},"includeSpent(include_spent): void"),(0,r.kt)("p",null,"Whether the query should include spent outputs or not."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"include_spent"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"true for including spent addresses, false for excluding")))),(0,r.kt)("h4",{id:"outputtypeoutput_type-void"},"outputType(output_type): void"),(0,r.kt)("p",null,"On what type of output are we filtering. can be\nSIGNATURE_LOCKED_SINGLE, SIGNATURE_LOCKED_DUST_ALLOWANCE or TREASURY"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output_type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OutputKind")),(0,r.kt)("td",{parentName:"tr",align:null},"The output type filter.")))),(0,r.kt)("h3",{id:"message"},"Message"),(0,r.kt)("p",null,"Represent the object that nodes gossip around the network."),(0,r.kt)("h4",{id:"builder-messagebuilder"},"builder(): MessageBuilder"),(0,r.kt)("p",null,"Creates a new ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageBuilder")," to construct an instance of a ",(0,r.kt)("inlineCode",{parentName:"p"},"Message"),"."),(0,r.kt)("h4",{id:"netorkid-long"},"netorkId(): long"),(0,r.kt)("p",null,"Returns the network id of a ",(0,r.kt)("inlineCode",{parentName:"p"},"Message"),"."),(0,r.kt)("h4",{id:"nonce-long"},"nonce(): long"),(0,r.kt)("p",null,"Returns the nonce of a ",(0,r.kt)("inlineCode",{parentName:"p"},"Message"),"."),(0,r.kt)("h4",{id:"parents-messageid-"},"parents(): MessageId []"),(0,r.kt)("p",null,"Returns the parents of a ",(0,r.kt)("inlineCode",{parentName:"p"},"Message"),"."),(0,r.kt)("h4",{id:"payload-optionalmessagepayload"},"payload(): Optional","<","MessagePayload",">"),(0,r.kt)("p",null,"Returns the optional payload of a ",(0,r.kt)("inlineCode",{parentName:"p"},"Message"),"."),(0,r.kt)("h3",{id:"messagebuilder"},"MessageBuilder"),(0,r.kt)("p",null,"A builder to build a ",(0,r.kt)("inlineCode",{parentName:"p"},"Message"),"."),(0,r.kt)("h4",{id:"new-messagebuilder"},"new(): MessageBuilder"),(0,r.kt)("p",null,"A builder to build a ",(0,r.kt)("inlineCode",{parentName:"p"},"Message"),"."),(0,r.kt)("h4",{id:"networkidnetwork_id-messagebuilder"},"networkId(network_id): MessageBuilder"),(0,r.kt)("p",null,"Adds a network id to a ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageBuilder"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"network_id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"The network id of the message")))),(0,r.kt)("h4",{id:"parentsparents-messagebuilder"},"parents(parents): MessageBuilder"),(0,r.kt)("p",null,"Adds parents to a ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageBuilder"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"parents"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessageId[]")),(0,r.kt)("td",{parentName:"tr",align:null},"The parents of this message")))),(0,r.kt)("h4",{id:"payloadpayload-messagebuilder"},"payload(payload): MessageBuilder"),(0,r.kt)("p",null,"Adds a payload to a ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageBuilder"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessagePayload")),(0,r.kt)("td",{parentName:"tr",align:null},"The payoad of the message")))),(0,r.kt)("h3",{id:"messagepayload"},"MessagePayload"),(0,r.kt)("h4",{id:"deserializeserialised_data-messagepayload"},"deserialize(serialised_data): MessagePayload"),(0,r.kt)("p",null,"Turns a serialized message payload string back into its class"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"serialised_data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The serialised Json MessagePayload string")))),(0,r.kt)("h4",{id:"serialize-string"},"serialize(): String"),(0,r.kt)("p",null,"Serializes the message payload into a json string."),(0,r.kt)("h4",{id:"payloadtype-messagepayloadtype"},"payloadType(): MessagePayloadType"),(0,r.kt)("p",null,"Get the type of message this contains (used to select the correct getter). Possiple types are TRANSACTION, MILESTONE, INDEXATION, RECEIPT and TREASURY_TRANSACTION."),(0,r.kt)("h4",{id:"getasindexation-optionalindexationpayload"},"getAsIndexation(): Optional","<","IndexationPayload",">"),(0,r.kt)("p",null,"Get this Payload as a Indexation payload type"),(0,r.kt)("h4",{id:"getastransaction-optionaltransactionpayload"},"getAsTransaction(): Optional","<","TransactionPayload",">"),(0,r.kt)("p",null,"Get this Payload as a TransactionPayload type"),(0,r.kt)("h4",{id:"getastreasury-optionaltreasurypayload"},"getAsTreasury(): Optional","<","TreasuryPayload",">"),(0,r.kt)("p",null,"Get this Payload as a TreasuryPayload type"),(0,r.kt)("h4",{id:"getasmilestone-optionalmilestonepayload"},"getAsMilestone(): Optional","<","MilestonePayload",">"),(0,r.kt)("p",null,"Get this Payload as a MilestonePayload type"),(0,r.kt)("h4",{id:"getasreceipt-optionalreceiptpayload"},"getAsReceipt(): Optional","<","ReceiptPayload",">"),(0,r.kt)("p",null,"Get this Payload as a ReceiptPayload type"),(0,r.kt)("h3",{id:"indexationpayload"},"IndexationPayload"),(0,r.kt)("h4",{id:"frombytesindex-data-void"},"fromBytes(index, data): void"),(0,r.kt)("p",null,"Creates a new ",(0,r.kt)("inlineCode",{parentName:"p"},"IndexationPayload"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"byte []")),(0,r.kt)("td",{parentName:"tr",align:null},"index bytes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"byte []")),(0,r.kt)("td",{parentName:"tr",align:null},"data bytes")))),(0,r.kt)("h4",{id:"fromstringsindex-data-void"},"fromStrings(index, data): void"),(0,r.kt)("p",null,"Creates a new ",(0,r.kt)("inlineCode",{parentName:"p"},"IndexationPayload")," from strings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"index string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"data string")))),(0,r.kt)("h4",{id:"index-byte-"},"index(): byte []"),(0,r.kt)("p",null,"Returns the index of an ",(0,r.kt)("inlineCode",{parentName:"p"},"IndexationPayload"),"."),(0,r.kt)("h4",{id:"data-byte-"},"data(): byte []"),(0,r.kt)("p",null,"Returns the data of an ",(0,r.kt)("inlineCode",{parentName:"p"},"IndexationPayload"),"."),(0,r.kt)("h3",{id:"transactionpayload"},"TransactionPayload"),(0,r.kt)("h4",{id:"builder-transactionpayloadbuilder"},"builder(): TransactionPayloadBuilder"),(0,r.kt)("p",null,"Return a new ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionPayloadBuilder")," to build a ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionPayload"),"."),(0,r.kt)("h4",{id:"essence-essence"},"essence(): Essence"),(0,r.kt)("p",null,"Return the essence of a ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionPayload"),"."),(0,r.kt)("h4",{id:"unlockblocks-unlockblock-"},"unlockBlocks(): UnlockBlock []"),(0,r.kt)("p",null,"Return unlock blocks of a ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionPayload"),"."),(0,r.kt)("h4",{id:"id-transactionid"},"id(): TransactionId"),(0,r.kt)("p",null,"Computes the identifier of a ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionPayload"),"."),(0,r.kt)("h3",{id:"transactionpayloadbuilder"},"TransactionPayloadBuilder"),(0,r.kt)("h4",{id:"new-transactionpayloadbuilder"},"new(): TransactionPayloadBuilder"),(0,r.kt)("p",null,"Creates a new ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionPayloadBuilder"),"."),(0,r.kt)("h4",{id:"withessenceessence-transactionpayloadbuilder"},"withEssence(essence): TransactionPayloadBuilder"),(0,r.kt)("p",null,"Adds an essence to a ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionPayloadBuilder"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"essence"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Essence")),(0,r.kt)("td",{parentName:"tr",align:null},"index bytes")))),(0,r.kt)("h4",{id:"withunlockblocksunlock_blocks-transactionpayloadbuilder"},"withUnlockBlocks(unlock_blocks): TransactionPayloadBuilder"),(0,r.kt)("p",null,"Adds unlock blocks to a ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionPayloadBuilder"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"unlock_blocks"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UnlockBlocks")),(0,r.kt)("td",{parentName:"tr",align:null},"index bytes")))),(0,r.kt)("h4",{id:"finish-transactionpayload"},"finish(): TransactionPayload"),(0,r.kt)("p",null,"Finishes a ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionPayloadBuilder")," into a ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionPayload"),"."),(0,r.kt)("h3",{id:"treasurypayload"},"TreasuryPayload"),(0,r.kt)("h4",{id:"newinput-output-treasurypayload"},"new(input, output): TreasuryPayload"),(0,r.kt)("p",null,"Creates a new ",(0,r.kt)("inlineCode",{parentName:"p"},"TreasuryPayload"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TreasuryInput")),(0,r.kt)("td",{parentName:"tr",align:null},"The input information of this payload")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TreasuryOutput")),(0,r.kt)("td",{parentName:"tr",align:null},"the output information of this payload")))),(0,r.kt)("h4",{id:"input-treasuryinput"},"input(): TreasuryInput"),(0,r.kt)("p",null,"Return the TreasuryInput"),(0,r.kt)("h4",{id:"output-treasuryoutput"},"output(): TreasuryOutput"),(0,r.kt)("p",null,"Returns the TreasuryOutput"),(0,r.kt)("h3",{id:"milestonepayload"},"MilestonePayload"),(0,r.kt)("h4",{id:"essence-milestonepayloadessence"},"essence(): MilestonePayloadEssence"),(0,r.kt)("p",null,"Returns the essence of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayload"),"."),(0,r.kt)("h4",{id:"signatures-milestonesignature"},"signatures(): MilestoneSignature[]"),(0,r.kt)("p",null,"Returns the signatures of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayload"),"."),(0,r.kt)("h4",{id:"id-long"},"id(): long"),(0,r.kt)("p",null,"Computes the identifier of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayload"),"."),(0,r.kt)("h4",{id:"validateapplicable_public_keys-min_threshold-void"},"validate(applicable_public_keys, min_threshold): void"),(0,r.kt)("p",null,"Semantically validate a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayload"),". Throws an error if the milestone is considered invalid."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"applicable_public_keys"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[]")),(0,r.kt)("td",{parentName:"tr",align:null},"hex encoded list of public keys used by the milestone")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"min_threshold"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum amount of signatures we need to verify on either side")))),(0,r.kt)("h3",{id:"receiptpayload"},"ReceiptPayload"),(0,r.kt)("h4",{id:"frommigrated_at-last-funds-transaction-void"},"from(migrated_at, last, funds, transaction): void"),(0,r.kt)("p",null,"Creates a new ",(0,r.kt)("inlineCode",{parentName:"p"},"ReceiptPayload"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"migrated_at"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"The milestone index at which the funds of a ",(0,r.kt)("inlineCode",{parentName:"td"},"ReceiptPayload")," were migrated")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"last"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"whether a ",(0,r.kt)("inlineCode",{parentName:"td"},"ReceiptPayload")," is the final one for a given migrated at index.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"funds"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MigratedFundsEntry[]")),(0,r.kt)("td",{parentName:"tr",align:null},"The funds which are migrated")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"transaction"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MessagePayload")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"TreasuryTransaction")," used to fund the funds. Must be a Treasury type")))),(0,r.kt)("h4",{id:"migratedat-long"},"migratedAt(): long"),(0,r.kt)("p",null,"Returns the milestone index at which the funds of a ",(0,r.kt)("inlineCode",{parentName:"p"},"ReceiptPayload")," were migrated at in the legacy network."),(0,r.kt)("h4",{id:"last-boolean"},"last(): boolean"),(0,r.kt)("p",null,"Returns whether a ",(0,r.kt)("inlineCode",{parentName:"p"},"ReceiptPayload")," is the final one for a given migrated at index."),(0,r.kt)("h4",{id:"funds-migratedfundsentry"},"funds(): MigratedFundsEntry[]"),(0,r.kt)("p",null,"The funds which were migrated with a ",(0,r.kt)("inlineCode",{parentName:"p"},"ReceiptPayload"),"."),(0,r.kt)("h4",{id:"amount-long"},"amount(): long"),(0,r.kt)("p",null,"Returns the sum of all ",(0,r.kt)("inlineCode",{parentName:"p"},"MigratedFundsEntry")," items within a ",(0,r.kt)("inlineCode",{parentName:"p"},"ReceiptPayload"),"."),(0,r.kt)("h4",{id:"transaction-treasurypayload"},"transaction(): TreasuryPayload"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"TreasuryTransaction")," used to fund the funds of a ",(0,r.kt)("inlineCode",{parentName:"p"},"ReceiptPayload"),"."),(0,r.kt)("h3",{id:"essence"},"Essence"),(0,r.kt)("h4",{id:"getasregular-optionalregularessence"},"getAsRegular(): Optional","<","RegularEssence",">"),(0,r.kt)("p",null,"Get this Essence as a RegularEssence type"),(0,r.kt)("h3",{id:"regularessence"},"RegularEssence"),(0,r.kt)("h4",{id:"inputs-input"},"inputs(): Input[]"),(0,r.kt)("p",null,"Gets the transaction inputs."),(0,r.kt)("h4",{id:"outputs-output"},"outputs(): Output[]"),(0,r.kt)("p",null,"Gets the transaction outputs."),(0,r.kt)("h4",{id:"payload-optionalmessagepayload-1"},"payload(): Optional","<","MessagePayload",">"),(0,r.kt)("p",null,"Gets the optional payload attached to this transaction"),(0,r.kt)("h3",{id:"milestonepayloadessence"},"MilestonePayloadEssence"),(0,r.kt)("h4",{id:"index-long"},"index(): long"),(0,r.kt)("p",null,"Returns the index of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayloadEssence"),"."),(0,r.kt)("h4",{id:"timestamp-long"},"timestamp(): long"),(0,r.kt)("p",null,"Returns the timestamp of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayloadEssence"),"."),(0,r.kt)("h4",{id:"parents--messageid"},"parents():  MessageId[]"),(0,r.kt)("p",null,"Returns the parents of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayloadEssence"),"."),(0,r.kt)("h4",{id:"merkleproof-byte"},"merkleProof(): byte[]"),(0,r.kt)("p",null,"Returns the merkle proof of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayloadEssence"),"."),(0,r.kt)("h4",{id:"nextpowscore-long"},"nextPowScore(): long"),(0,r.kt)("p",null,"Returns the next proof of work score of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayloadEssence"),"."),(0,r.kt)("h4",{id:"nextpowscoremilestone-long"},"nextPowScoreMilestone(): long"),(0,r.kt)("p",null,"Returns the next proof of work index of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayloadEssence"),"."),(0,r.kt)("h4",{id:"publickeys-publickey"},"publicKeys(): PublicKey[]"),(0,r.kt)("p",null,"Returns the public keys of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayloadEssence"),"."),(0,r.kt)("h4",{id:"receipt-optionalreceiptpayload"},"receipt(): Optional","<","ReceiptPayload",">"),(0,r.kt)("p",null,"Returns the optional receipt of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayloadEssence"),"."),(0,r.kt)("h4",{id:"hash-byte"},"hash(): byte[]"),(0,r.kt)("p",null,"Hashes the ",(0,r.kt)("inlineCode",{parentName:"p"},"MilestonePayloadEssence to be signed.")),(0,r.kt)("h3",{id:"unlockbocks"},"UnlockBocks"),(0,r.kt)("h4",{id:"fromunlock_blocks-unlockbocks"},"from(unlock_blocks): UnlockBocks"),(0,r.kt)("p",null,"Constructs an UnlockBlocks type from an array of blocks"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"unlock_blocks"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UnlockBock[]")),(0,r.kt)("td",{parentName:"tr",align:null},"The UnlockBocks to add")))),(0,r.kt)("h4",{id:"getindex-optionalunlockblock"},"get(index) Optional","<","UnlockBlock",">"),(0,r.kt)("p",null,"Gets a clone of an ",(0,r.kt)("inlineCode",{parentName:"p"},"UnlockBlock")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"UnlockBlocks"),".\nReturns the referenced unlock block if the requested unlock block was a reference."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"The UnlockBock to get")))),(0,r.kt)("h3",{id:"unockbock"},"UnockBock"),(0,r.kt)("h4",{id:"kind-unlockblockkind"},"kind(): UnlockBlockKind"),(0,r.kt)("p",null,"Get the type of message this contains (used to select the correct getter). Possiple types are ED25519 and REFERENCE."),(0,r.kt)("h4",{id:"getasreference-optionalreferenceunlock"},"getAsReference(): Optional","<","ReferenceUnlock",">"),(0,r.kt)("p",null,"Get this UnockBock as a Reference Unlock type"),(0,r.kt)("h4",{id:"getassignature-optionalsignatureunlock"},"getAsSignature(): Optional","<","SignatureUnlock",">"),(0,r.kt)("p",null,"Get this UnockBock as a SignatureUnlock type"),(0,r.kt)("h3",{id:"referenceunlock"},"ReferenceUnlock"),(0,r.kt)("h4",{id:"fromindex-referenceunlock"},"from(index): ReferenceUnlock"),(0,r.kt)("p",null,"Creates a new ",(0,r.kt)("inlineCode",{parentName:"p"},"ReferenceUnlock")," by index"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},"The index this Reference is actually using")))),(0,r.kt)("h4",{id:"index-long-1"},"index(): long"),(0,r.kt)("p",null,"Return the index of a ",(0,r.kt)("inlineCode",{parentName:"p"},"ReferenceUnlock"),"."),(0,r.kt)("h3",{id:"signatureunlock"},"SignatureUnlock"),(0,r.kt)("h4",{id:"newpublic_key-signature-signatureunlock"},"new(public_key, signature): SignatureUnlock"),(0,r.kt)("p",null,"Create a new SignatureUnlock"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"public_key"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"byte[]")),(0,r.kt)("td",{parentName:"tr",align:null},"The public_key associated with the signature")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"signature"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"byte[]")),(0,r.kt)("td",{parentName:"tr",align:null},"The signature of this block")))),(0,r.kt)("h3",{id:"migratedfundsentry"},"MigratedFundsEntry"),(0,r.kt)("h4",{id:"fromhash-output-migratedfundsentry"},"from(hash, output): MigratedFundsEntry"),(0,r.kt)("p",null,"Creates a new ",(0,r.kt)("inlineCode",{parentName:"p"},"MigratedFundsEntry"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"hash"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The tail transaction hash of the entry")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SignatureLockedSingleOutput")),(0,r.kt)("td",{parentName:"tr",align:null},"The output used in this entry")))),(0,r.kt)("h4",{id:"tailtransactionhash-string"},"tailTransactionHash(): String"),(0,r.kt)("p",null,"Returns the tail transaction hash of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MigratedFundsEntry"),"."),(0,r.kt)("h4",{id:"output-signaturelockedsingleoutput"},"output(): SignatureLockedSingleOutput"),(0,r.kt)("p",null,"Returns the output of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MigratedFundsEntry"),"."),(0,r.kt)("h3",{id:"signaturelockedsingleoutput"},"SignatureLockedSingleOutput"),(0,r.kt)("p",null,"Describes a deposit to a single address which is unlocked via a signature."),(0,r.kt)("h4",{id:"fromaddress-amount-signaturelockedsingleoutput"},"from(address, amount): SignatureLockedSingleOutput"),(0,r.kt)("p",null,"Creates a new ",(0,r.kt)("inlineCode",{parentName:"p"},"SignatureLockedSingleOutput"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Address")),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the output")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of the output")))),(0,r.kt)("h4",{id:"address-address"},"address(): Address"),(0,r.kt)("p",null,"Returns the address of a ",(0,r.kt)("inlineCode",{parentName:"p"},"SignatureLockedSingleOutput"),"."),(0,r.kt)("h4",{id:"amount-long-1"},"amount(): long"),(0,r.kt)("p",null,"Returns the amount of a ",(0,r.kt)("inlineCode",{parentName:"p"},"SignatureLockedDustAllowanceOutput"),"."))}k.isMDXComponent=!0},3905:function(t,e,a){"use strict";a.d(e,{Zo:function(){return s},kt:function(){return m}});var n=a(7294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var p=n.createContext({}),o=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=o(t.components);return n.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,p=t.parentName,s=d(t,["components","mdxType","originalType","parentName"]),k=o(a),m=l,g=k["".concat(p,".").concat(m)]||k[m]||u[m]||r;return a?n.createElement(g,i(i({ref:e},s),{},{components:a})):n.createElement(g,i({ref:e},s))}));function m(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=k;var d={};for(var p in e)hasOwnProperty.call(e,p)&&(d[p]=e[p]);d.originalType=t,d.mdxType="string"==typeof t?t:l,i[1]=d;for(var o=2;o<r;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"}}]);